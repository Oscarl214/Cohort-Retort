{"ast":null,"code":"var _jsxFileName = \"/Users/scotthale/code/bootcamp/Projects/Project-3/Group-Project3/client/src/components/CategoryMenu/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryMenu() {\n  _s();\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryMenu, \"dVCQPHAWx2znearw0XIiXyA+Ei0=\", false, function () {\n  return [useStoreContext, useQuery];\n});\n_c = CategoryMenu;\nexport default CategoryMenu;\nvar _c;\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","useQuery","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","jsxDEV","_jsxDEV","CategoryMenu","_s","state","dispatch","categories","loading","data","categoryData","type","forEach","category","then","handleClick","id","currentCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","_id","name","_c","$RefreshReg$"],"sources":["/Users/scotthale/code/bootcamp/Projects/Project-3/Group-Project3/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SACEC,iBAAiB,EACjBC,uBAAuB,QAClB,qBAAqB;AAC5B,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,eAAe,CAAC,CAAC;EAE3C,MAAM;IAAEW;EAAW,CAAC,GAAGF,KAAK;EAE5B,MAAM;IAAEG,OAAO;IAAEC,IAAI,EAAEC;EAAa,CAAC,GAAGf,QAAQ,CAACI,gBAAgB,CAAC;EAElEL,SAAS,CAAC,MAAM;IACd,IAAIgB,YAAY,EAAE;MAChBJ,QAAQ,CAAC;QACPK,IAAI,EAAEd,iBAAiB;QACvBU,UAAU,EAAEG,YAAY,CAACH;MAC3B,CAAC,CAAC;MACFG,YAAY,CAACH,UAAU,CAACK,OAAO,CAAEC,QAAQ,IAAK;QAC5Cb,UAAU,CAAC,YAAY,EAAE,KAAK,EAAEa,QAAQ,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACL,OAAO,EAAE;MACnBR,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAACc,IAAI,CAAEP,UAAU,IAAK;QACnDD,QAAQ,CAAC;UACPK,IAAI,EAAEd,iBAAiB;UACvBU,UAAU,EAAEA;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACG,YAAY,EAAEF,OAAO,EAAEF,QAAQ,CAAC,CAAC;EAErC,MAAMS,WAAW,GAAIC,EAAE,IAAK;IAC1BV,QAAQ,CAAC;MACPK,IAAI,EAAEb,uBAAuB;MAC7BmB,eAAe,EAAED;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1Bf,UAAU,CAACgB,GAAG,CAAEC,IAAI,iBACnBtB,OAAA;MAEEuB,OAAO,EAAEA,CAAA,KAAM;QACbV,WAAW,CAACS,IAAI,CAACE,GAAG,CAAC;MACvB,CAAE;MAAAR,QAAA,EAEDM,IAAI,CAACG;IAAI,GALLH,IAAI,CAACE,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMP,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAhDQD,YAAY;EAAA,QACOP,eAAe,EAIDD,QAAQ;AAAA;AAAAiC,EAAA,GALzCzB,YAAY;AAkDrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}